@page "/fetchdata"
@using BlazorPaging.Shared
@inject HttpClient Http

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>

    <div>
        <input type="button" class="btn-lg btn" id="prev" @onclick="PrevPage" value="Previous" />

        @for (int i = CurPage-2; i <= CurPage + 2; i++)
        {
            int j = i;
            @if(i > 0)
            {
                if(i == CurPage)
                {
                    <span class="px-2" style="font-weight:bold;cursor:pointer" @onclick="() => ShowPage(j)">@i</span>
                }
                else
                {
                    <span class="px-2" style="cursor:pointer" @onclick="() => ShowPage(j)">@i</span>
                }
            }

        }
        <input type="button" class="btn-lg btn" id="next" @onclick="NextPage" value="Next" />
    </div>
}

@code {
    private WeatherForecast[]? forecasts;
    private int CurPage = 1;

    protected override async Task OnInitializedAsync()
    {
        await ShowPage();
    }

    protected async Task NextPage()
    {
        CurPage++;
        await ShowPage();
    }

    protected async Task ShowPage(int i)
    {
        CurPage = i;
        await ShowPage();
    }

    protected async Task PrevPage()
    {
        if (CurPage > 1)
        {
            CurPage--;
            await ShowPage();
        }
    }

    protected async Task ShowPage()
    {
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>($"/WeatherForecast?page={CurPage}");
    }
}
